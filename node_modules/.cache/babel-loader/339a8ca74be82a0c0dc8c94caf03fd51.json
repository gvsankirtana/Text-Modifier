{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gvgbc\\\\Dropbox\\\\My PC (LAPTOP-9C98ONB4)\\\\Documents\\\\Text-Modifier\\\\src\\\\components\\\\TextForm.js\";\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Form, Container } from 'react-bootstrap';\nexport default function TextForm(props) {\n  const handleUpClick = props => {\n    let newText = text.toUpperCase();\n    setText(newText); //props.showAlert(\"Converted to Uppercase!\");\n  };\n\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText); //props.showAlert(\"Converted to Lowercase!\");\n  };\n\n  const handleClearClick = () => {\n    let newText = '';\n    setText(newText); //props.showAlert(\"Text cleared!\");\n  };\n\n  const handleCopyClick = () => {\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value); //props.showAlert(\"Copied to clipboard!\");\n  };\n\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \")); //props.showAlert(\"Removed Extra spaces!\");\n  };\n\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState('Enter Text Here'); // text = \"new text\";//wrong way to change the state\n  // setText(\"new Text\");//correct way to change the state\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: props.mode === 'dark' ? 'white' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      backgroundColor: props.mode === 'light' ? 'white' : '#042048'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"exampleForm.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    controlid: \"myBox\",\n    as: \"textarea\",\n    rows: 10,\n    value: text,\n    onChange: handleOnChange,\n    style: {\n      backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n      color: props.mode === 'dark' ? 'white' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary mx-2\",\n    onClick: handleUpClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, \"Convert to uppercase\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary mx-2\",\n    onClick: handleLoClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, \"Convert to lowercase\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary mx-2\",\n    onClick: handleClearClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, \"Clear Text\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary mx-2\",\n    onClick: handleCopyClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, \"Copy Text\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary mx-2\",\n    onClick: handleExtraSpaces,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, \"Remove Extra Spaces\"))), /*#__PURE__*/React.createElement(Container, {\n    className: \"my-3\",\n    style: {\n      backgroundColor: props.mode === 'light' ? 'white' : '#042048',\n      color: props.mode === 'dark' ? 'white' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }\n  }, \"Your text summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }\n  }, text.split(\" \").length, \" words and \", text.length, \" characters\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }\n  }, 0.008 * text.length, \" Minutes read\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 1\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }\n  }, text.length > 0 ? text : \"Enter something in the text box above to preview it here\")));\n}","map":{"version":3,"sources":["C:/Users/gvgbc/Dropbox/My PC (LAPTOP-9C98ONB4)/Documents/Text-Modifier/src/components/TextForm.js"],"names":["React","useState","Button","Form","Container","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","handleLoClick","toLowerCase","handleClearClick","handleCopyClick","document","getElementById","select","navigator","clipboard","writeText","value","handleExtraSpaces","split","join","handleOnChange","event","target","color","mode","heading","backgroundColor","length"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,kCAAP;AACD,SAASC,MAAT,EAAgBC,IAAhB,EAAqBC,SAArB,QAAqC,iBAArC;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAMC,aAAa,GAAID,KAAD,IAAU;AAC9B,QAAIE,OAAO,GAAGC,IAAI,CAACC,WAAL,EAAd;AACAC,IAAAA,OAAO,CAACH,OAAD,CAAP,CAF8B,CAG9B;AACD,GAJD;;AAKA,QAAMI,aAAa,GAAG,MAAK;AACzB,QAAIJ,OAAO,GAAGC,IAAI,CAACI,WAAL,EAAd;AACAF,IAAAA,OAAO,CAACH,OAAD,CAAP,CAFyB,CAGzB;AACD,GAJD;;AAKA,QAAMM,gBAAgB,GAAG,MAAK;AAC5B,QAAIN,OAAO,GAAG,EAAd;AACAG,IAAAA,OAAO,CAACH,OAAD,CAAP,CAF4B,CAG5B;AACD,GAJD;;AAKA,QAAMO,eAAe,GAAG,MAAK;AAC3B,QAAIN,IAAI,GAAGO,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAX;AACAR,IAAAA,IAAI,CAACS,MAAL;AACAC,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BZ,IAAI,CAACa,KAAnC,EAH2B,CAI3B;AACD,GALD;;AAMA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAIf,OAAO,GAAGC,IAAI,CAACe,KAAL,CAAW,MAAX,CAAd;AACAb,IAAAA,OAAO,CAACH,OAAO,CAACiB,IAAR,CAAa,GAAb,CAAD,CAAP,CAF8B,CAG9B;AACD,GAJD;;AAKA,QAAMC,cAAc,GAAIC,KAAD,IAAU;AAC/BhB,IAAAA,OAAO,CAACgB,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAP;AACD,GAFD;;AAGA,QAAK,CAACb,IAAD,EAAME,OAAN,IAAiBV,QAAQ,CAAC,iBAAD,CAA9B,CA9BsC,CA+BvC;AACA;;AACC,sBACE,uDACC;AAAI,IAAA,KAAK,EAAI;AAAC4B,MAAAA,KAAK,EAAEvB,KAAK,CAACwB,IAAN,KAAe,MAAf,GAAsB,OAAtB,GAA8B;AAAtC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8DxB,KAAK,CAACyB,OAApE,CADD,eAEC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAI;AAAEC,MAAAA,eAAe,EAAE1B,KAAK,CAACwB,IAAN,KAAe,OAAf,GAAuB,OAAvB,GAA+B;AAAlD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAC,8BAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,EAAE,EAAC,UAAnC;AAA8C,IAAA,IAAI,EAAE,EAApD;AAAwD,IAAA,KAAK,EAAErB,IAA/D;AAAqE,IAAA,QAAQ,EAAIiB,cAAjF;AAAiG,IAAA,KAAK,EAAI;AAAEM,MAAAA,eAAe,EAAE1B,KAAK,CAACwB,IAAN,KAAe,MAAf,GAAsB,MAAtB,GAA6B,OAAhD;AAAwDD,MAAAA,KAAK,EAAEvB,KAAK,CAACwB,IAAN,KAAe,MAAf,GAAsB,OAAtB,GAA8B;AAA7F,KAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADI,eAIJ,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,OAAO,EAAEvB,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJI,eAKJ,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,OAAO,EAAEK,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALI,eAMJ,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,OAAO,EAAEE,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANI,eAOJ,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,OAAO,EAAEC,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPI,eAQJ,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,OAAO,EAAEQ,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARI,CADD,CAFD,eAcJ,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,KAAK,EAAI;AAAES,MAAAA,eAAe,EAAE1B,KAAK,CAACwB,IAAN,KAAe,OAAf,GAAuB,OAAvB,GAA+B,SAAlD;AAA4DD,MAAAA,KAAK,EAAEvB,KAAK,CAACwB,IAAN,KAAe,MAAf,GAAsB,OAAtB,GAA8B;AAAjG,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIrB,IAAI,CAACe,KAAL,CAAW,GAAX,EAAgBS,MAApB,iBAAuCxB,IAAI,CAACwB,MAA5C,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,QAAQxB,IAAI,CAACwB,MAAjB,kBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIxB,IAAI,CAACwB,MAAL,GAAY,CAAZ,GAAcxB,IAAd,GAAmB,0DAAvB,CALA,CAdI,CADF;AAwBA","sourcesContent":[" import React,{useState} from 'react'\r\n import 'bootstrap/dist/css/bootstrap.css';\r\nimport { Button,Form,Container} from 'react-bootstrap';\r\nexport default function TextForm(props) {\r\n  const handleUpClick = (props) =>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    //props.showAlert(\"Converted to Uppercase!\");\r\n  }\r\n  const handleLoClick = () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    //props.showAlert(\"Converted to Lowercase!\");\r\n  }\r\n  const handleClearClick = () =>{\r\n    let newText = '';\r\n    setText(newText);\r\n    //props.showAlert(\"Text cleared!\");\r\n  }\r\n  const handleCopyClick = () =>{ \r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    //props.showAlert(\"Copied to clipboard!\");\r\n  }\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    //props.showAlert(\"Removed Extra spaces!\");\r\n  }\r\n  const handleOnChange = (event) =>{ \r\n    setText(event.target.value);\r\n  }\r\n  const[text,setText] = useState('Enter Text Here');  \r\n // text = \"new text\";//wrong way to change the state\r\n // setText(\"new Text\");//correct way to change the state\r\n  return (\r\n    <>\r\n     <h1 style = {{color: props.mode === 'dark'?'white':'black'}}>{props.heading}</h1>\r\n     <Container style = {{ backgroundColor: props.mode === 'light'?'white':'#042048'}}>\r\n      <Form>\r\n  <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n    <Form.Control controlid=\"myBox\" as=\"textarea\" rows={10} value={text} onChange = {handleOnChange} style = {{ backgroundColor: props.mode === 'dark'?'grey':'white',color: props.mode === 'dark'?'white':'black'}}/>\r\n  </Form.Group>\r\n  <Button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</Button>\r\n  <Button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lowercase</Button>\r\n  <Button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</Button>\r\n  <Button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>Copy Text</Button>\r\n  <Button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</Button>\r\n</Form>\r\n</Container>\r\n<Container className='my-3' style = {{ backgroundColor: props.mode === 'light'?'white':'#042048',color: props.mode === 'dark'?'white':'black'}}>\r\n<h2>Your text summary</h2>\r\n<p>{text.split(\" \").length} words and {text.length} characters</p>\r\n<p>{0.008 * text.length} Minutes read</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"Enter something in the text box above to preview it here\"}</p>\r\n</Container>\r\n</>\r\n   )\r\n }\r\n "]},"metadata":{},"sourceType":"module"}